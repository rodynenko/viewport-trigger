var ViewportTrigger=function(){"use strict";var e=function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")},r=function(){function e(e,r){for(var n=0;n<r.length;n++){var t=r[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(r,n,t){return n&&e(r.prototype,n),t&&e(r,t),r}}();function n(e,r){for(var n=0,t=e.length;n<t;){if(r(e[0],n,e))return n;n++}return-1}function t(e,r){for(var n=Object.getOwnPropertyNames(e),t=0,o=n.length;t<o;t+=1){var i=n[t];r(e[prop],i)}}return function(){function o(){var r=this;e(this,o),this.observe=function(e){if(!e)throw new Error("Target element is not set for observe function");return r._observer.observe(e),r},this.unobserve=function(e){if(!e)throw new Error("Target element is not set for unobserve function");return r._observer.unobserve(e),t(r._eventHandlers,function(t,o){var i=n(r._eventHandlers[o],e);i>-1&&r._eventHandlers[o].splice(i,1)}),r},this.unobserveAll=function(){r._observer.disconnect(),t(r._eventHandlers,function(e,n){r._eventHandlers[n].length=0})},this.on=function(e,n,t){if(!Array.isArray(r._eventHandlers[e]))throw new Error("viewportObserver: method `on` get not correct event type");return r._eventHandlers[type].push({target:n,trigger:t}),r},this.off=function(e,t){if(!Array.isArray(r._eventHandlers[e]))throw new Error("viewportObserver: method `off` get not correct event type");var o=n(r._eventHandlers[e],function(e){return e.target===t});return o>-1&&r._eventHandlers[e].splice(o,1),r}}return r(o,[{key:"constuctor",value:function(e){if(!window.IntersectionObserver)throw new Error("There is native support for IntersectionObserver API. Please, use polyfill");this._observer=new IntersectionObserver(this.handleIntersectionCall,e),this._eventHandlers={enter:[],leave:[]}}},{key:"handleIntersectionCall",value:function(e){for(var r=0,n=e.length;r<n;r+=1){var t=e[r],o=t.intersectionRatio,i=t.target,s=i.classList;o>0?s.contains("in-viewport")?(s.remove("in-viewport"),this.handleEvent("leave",i)):(s.add("in-viewport"),this.handleEvent("enter",i)):s.contains("in-viewport")&&(s.remove("in-viewport"),this.handleEvent("leave",i))}}},{key:"handleEvent",value:function(e,r){var t=this._eventHandlers[type],o=n(t,function(e){return e.target===r});o>-1&&t[o].trigger()}}]),o}()}();
